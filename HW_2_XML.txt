XML
1.Создать внешний репозиторий c названием XML.
  1.1 New repository/JSON
  1.2 Копируем SSH-ключ в буфер обмена

2.Клонировать репозиторий XML на локальный компьютер.
  2.1 Выполянем команду: git clone git@github.com:NatashaSmolyak/XML.git
  2.2 Подтверждаем паролем создание пустого локального репозитория.

3.Внутри локального XML создать файл “new.xml”.
  3.1 Заходим в директорию XML: $ cd XML
  3.2 Создаем новый файл: $ touch new.xml

4.Добавить файл под гит.
  4.1 Добавляем файл для контроля Git: $ git add new.xml
 
5.Закоммитить файл.
  5.1 Сохраняем состояние директории:$ git commit -m "Add file new.xml"

6.Отправить файл на внешний GitHub репозиторий.
  6.1. $ git push
  6.2. Подтверждаем паролем отправку файл на внешний репозиториий.

7.Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
  7.1 Открываем файл для редактирования: $ nano new.xml
<info>
 <person_name> Natasha Smolyak </person_name>
 <person_age> 51 </person_age>
 <number_of_pets> 0 </number_of_pets>
 <salary> 2500 </salary>
</info>
  7.2 Запись и выйти: CTRL+O, CTRL+X
8.Отправить изменения на внешний репозиторий.
  8.1. Проводим контроль и сохрание изменений:$ git commit -am "modified new.xml"
  8.2. Обновляем на внешнем репозитории: $ git push
  8.3. Подтверждаем изменения  с помощью пароля.

9. Создать файл preferences.xml
  9.1. Создаем новый файл: $ touch preferences.json

10.В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
  10.1 Открываем файл для редактирования: $ nano new.xml
<preferences>
  <favorite_movie>Brilliantovaya_ruka</favorite_movie> 
  <favorite_serial>Interni</favorite_serial> 
  <favorite_food>golubtsy</favorite_food> 
  <favorite_time_of_year>spring</favorite_time_of_year> 
  <country_to_vizit>Iceland</country_to_vizit> 
  </preferences>
  10.2 Запись и выйти: CTRL+O, CTRL+X

11.Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
  11.1 Создаем новый файл: $ touch sklls.xml

12.Сделать коммит в одну строку.
 12.1 $ git commit -am "Add new files"

13.Отправить сразу 2 файла на внешний репозиторий.
  13.1 $ git add .
  13.2 $ git commit -m "Add files:preferences.xml, skills.xml"
  13.3 $ git push

14.На веб интерфейсе создать файл bug_report.xml.
 14.1. Создаем файл bug_report.xml: Add file/Create new file
 14.2. Заполняем Title - - "Create file bug_report.xml"
 14.3. Устанавливаем  переключатель: Commit directly to the main branch
 14.4. Нажимаем кнопку [Commit new file]

15.На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
  15.1. Открываем файл bug_report.xml.
  15.2. Выволняем команду Edit this file.
  15.3. Вводимт текст в формате XML.

16.Сделать Commit changes (сохранить) изменения на веб интерфейсе.
   16.1. Заполняем Title - "Modified file bug_report.xml"
   16.2. Устанавливаем  переключатель: Commit directly to the main branch.
   16.3. Нажимаем кнопку [Commit changes].

17.Синхронизировать внешний и локальный репозиторий XML
   17.1. Узнаем про изменения на внешнем репозитории: $ git fetch
   17.2. Скачиваем изменения на локальный репозиторий: $ git pull
   17.3. Снова проверяем изменения (что пусто): $ git fetch

